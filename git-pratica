// Arquivo que mostra sequência passo-a-passo dos protocolos de utilização do git/gihub. Será utilizado como "cobaia" para o treino dos protocolos.

// (Utilização do vi:) 
*********************************
-i (incia edição) 
-esc (vai para o modo comando)
-:wq (salva e sai)
-:q (sai do editor)
-:q! (sai sem salvar)
-:w! (força sobrescrição)
*********************************

PARTE 1: GIT
============

1o Passo: Configuração de Usuário
---------------------------------

git config --global user.email [email]
git config --global user.name [nome]

Configura as informações do usuário que está a realizar o versionamento.
=======================================================================

2o passo: Inicialização do git
------------------------------

git init 

Inicializa o git na pasta do seu projeto
========================================

3o passo: Adicionar arquivos
----------------------------

git add [arquivo]

Adiciona o arquivo a ser versionado ("git add ." adiciona todos os arquivo da pasta).
====================================================================================

4o passo: Jogar modificações para a master
------------------------------------------

git commit {-m ["mensagem"]}

Joga as modificações para a ramificação principal. Essa ação será salva em log com o identificador do usuário conjuntamente à mensagem que deve ser explicativa da modificação efetuada.
=======================================================================================

5o passo: Criação de ramificação
--------------------------------

git branch [nome da ramificação]

Inicializa um repositório idêntico ao da master que será utilizado para edição em paralelo da versão.
==============

6o passo: Acesso à branch paralela
----------------------------------

git checkout [nome da branch]

Passa a edição do projeto da master para a branch em questão.

(git branch -l => lista as branches)
(git status => retorna a ramificação em que se está trabalhando)
(git checkout -b [nome da ramificação] => cria a ramificação e já vai para ela))
================================================================================

7o passo: Fundir à Master
-------------------------

git merge [nome da ramificação]

Adiciona as modificações feitas na ramificação em questão à ramificação principal
=================================================================================

Extras:
-------

git stash => salva a tarefa não concluída em diretório temporário, em caso de emergência, para continuar a edição depois.
==================================

PARTE 2: Github
===============

O Github é um hospedeiro de repositórios remoto, onde podemos armazenar/compartilhar arquivos, sendo eles de código ou não.

Os passos descrevem o protocolo para subir os repositórios do git para o github.

1o passo: Criar o repositório no Github
---------------------------------------

Abrir sua página no Github e criar o diretório (aparentemente não tem jeito de fazê-lo por linha de comando).
======================

2o passo: Configurar o repositório de origem (repositório do github)
--------------------------------------------------------------------

git remote origin [endereço do repositório no github]

(git remote -v => lista o "fetch" e o "push")
(fetch => endereço de onde podemos baixar os arquivos do github)
(push => endereço para onde iremos "empurrar" os arquivos para o github)

Configura a destinação do repositório para o endereço do github.
================================================================

3o passo: "Empurrar" os arquivos para o github
----------------------------------------------

git push origin master

"Empurra" os arquivos da master para o github no repositório especificado no passo anterior.
=====

!IMPORTANTE!
************

CASO VOLTEMOS A UTILIZAR UMA BRANCH DESATUALIZADA, UTILIZAR O COMANDO

git pull origin master

PARA QUE A BRANCH SEJA ATUALIZADA DO MASTER HOSPEDADO NO GITHUB!
****************************************************************


